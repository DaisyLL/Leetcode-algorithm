如果出现下述两种情况，交易 可能无效：

交易金额超过 ¥1000
或者，它和另一个城市中同名的另一笔交易相隔不超过 60 分钟（包含 60 分钟整）
每个交易字符串 transactions[i] 由一些用逗号分隔的值组成，这些值分别表示交易的名称，时间（以分钟计），金额以及城市。

给你一份交易清单 transactions，返回可能无效的交易列表。你可以按任何顺序返回答案。

 

示例 1：

输入：transactions = ["alice,20,800,mtv","alice,50,100,beijing"]
输出：["alice,20,800,mtv","alice,50,100,beijing"]
解释：第一笔交易是无效的，因为第二笔交易和它间隔不超过 60 分钟、名称相同且发生在不同的城市。同样，第二笔交易也是无效的。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/invalid-transactions
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
#######################################################################################################################################
class Solution(object):
    def invalidTransactions(self, transactions):
        """
        :type transactions: List[str]
        :rtype: List[str]
        """
        res = []
        tmp = [x.split(',') for x in transactions]
        
        for idx1, cont1 in enumerate(transactions):
            if int(tmp[idx1][2]) > 1000:
                res.append(cont1)
                continue
            
            for idx2, cont2 in enumerate(transactions):
                if idx2 == idx1:
                    continue
                if tmp[idx1][0] == tmp[idx2][0] and tmp[idx1][3] != tmp[idx2][3] and abs(int(tmp[idx1][1])-int(tmp[idx2][1])) <= 60:
                    res.append(cont1)
                    break
            
        return res
  竟然没有超时。。。
