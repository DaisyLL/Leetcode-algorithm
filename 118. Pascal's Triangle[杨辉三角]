#######################################################################################################################################
Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.


In Pascal's triangle, each number is the sum of the two numbers directly above it.

Example:

Input: 5
Output:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/pascals-triangle
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
#######################################################################################################################################
之前也有很多这中类似的题，再强调一下，任何题目都要考虑空值
class Solution:
    def generate(self, numRows: int) -> List[List[int]]:
        if numRows == 0:
            return []
        else:
            triangle = list()
            triangle.append([1])
            for i in range(1,numRows):
                a = [1]
                for j in range(1,i):
                    a.append(triangle[i-1][j-1] + triangle[i-1][j])
                a.append(1)
                triangle.append(a)
            return triangle
